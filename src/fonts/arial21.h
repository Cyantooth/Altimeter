#pragma once

#include "basefonts.h"

const uint8_t rulerFontHeight = 20;

// Character bitmaps for Arial Narrow 21pt
const uint8_t rulerFont[] PROGMEM =
{
	// @0 '0' (11 pixels wide)
	0x1F, 0x00, //    #####
	0x3F, 0x80, //   #######
	0x7F, 0xC0, //  #########
	0x71, 0xC0, //  ###   ###
	0x71, 0xC0, //  ###   ###
	0xE0, 0xE0, // ###     ###
	0xE0, 0xE0, // ###     ###
	0xE0, 0xE0, // ###     ###
	0xE0, 0xE0, // ###     ###
	0xE0, 0xE0, // ###     ###
	0xE0, 0xE0, // ###     ###
	0xE0, 0xE0, // ###     ###
	0xE0, 0xE0, // ###     ###
	0xE0, 0xE0, // ###     ###
	0xE0, 0xE0, // ###     ###
	0x71, 0xC0, //  ###   ###
	0x71, 0xC0, //  ###   ###
	0x7F, 0xC0, //  #########
	0x3F, 0x80, //   #######
	0x1F, 0x00, //    #####

	// @40 '1' (7 pixels wide)
	0x0E, //     ###
	0x0E, //     ###
	0x1E, //    ####
	0x3E, //   #####
	0x7E, //  ######
	0xFE, // #######
	0xCE, // ##  ###
	0x8E, // #   ###
	0x0E, //     ###
	0x0E, //     ###
	0x0E, //     ###
	0x0E, //     ###
	0x0E, //     ###
	0x0E, //     ###
	0x0E, //     ###
	0x0E, //     ###
	0x0E, //     ###
	0x0E, //     ###
	0x0E, //     ###
	0x0E, //     ###

	// @60 '2' (11 pixels wide)
	0x1F, 0x00, //    #####
	0x3F, 0x80, //   #######
	0x7F, 0xC0, //  #########
	0x71, 0xE0, //  ###   ####
	0xE0, 0xE0, // ###     ###
	0xE0, 0xE0, // ###     ###
	0x00, 0xE0, //         ###
	0x00, 0xE0, //         ###
	0x01, 0xE0, //        ####
	0x03, 0xC0, //       ####
	0x07, 0xC0, //      #####
	0x07, 0x80, //      ####
	0x0F, 0x00, //     ####
	0x1E, 0x00, //    ####
	0x3E, 0x00, //   #####
	0x7C, 0x00, //  #####
	0x78, 0x00, //  ####
	0x7F, 0xE0, //  ##########
	0xFF, 0xE0, // ###########
	0xFF, 0xE0, // ###########

	// @100 '3' (11 pixels wide)
	0x1F, 0x00, //    #####
	0x3F, 0x80, //   #######
	0x7F, 0xC0, //  #########
	0x71, 0xE0, //  ###   ####
	0xE0, 0xE0, // ###     ###
	0xE0, 0xE0, // ###     ###
	0x00, 0xE0, //         ###
	0x01, 0xC0, //        ###
	0x0F, 0xC0, //     ######
	0x0F, 0x80, //     #####
	0x0F, 0xC0, //     ######
	0x01, 0xE0, //        ####
	0x00, 0xE0, //         ###
	0x00, 0xE0, //         ###
	0xE0, 0xE0, // ###     ###
	0xE0, 0xE0, // ###     ###
	0x71, 0xE0, //  ###   ####
	0x7F, 0xC0, //  #########
	0x3F, 0x80, //   #######
	0x1F, 0x00, //    #####

	// @140 '4' (12 pixels wide)
	0x01, 0xC0, //        ###
	0x01, 0xC0, //        ###
	0x03, 0xC0, //       ####
	0x07, 0xC0, //      #####
	0x07, 0xC0, //      #####
	0x0F, 0xC0, //     ######
	0x0F, 0xC0, //     ######
	0x1D, 0xC0, //    ### ###
	0x1D, 0xC0, //    ### ###
	0x39, 0xC0, //   ###  ###
	0x71, 0xC0, //  ###   ###
	0x71, 0xC0, //  ###   ###
	0xE1, 0xC0, // ###    ###
	0xFF, 0xF0, // ############
	0xFF, 0xF0, // ############
	0xFF, 0xF0, // ############
	0x01, 0xC0, //        ###
	0x01, 0xC0, //        ###
	0x01, 0xC0, //        ###
	0x01, 0xC0, //        ###

	// @180 '5' (11 pixels wide)
	0x3F, 0xC0, //   ########
	0x3F, 0xC0, //   ########
	0x7F, 0xC0, //  #########
	0x70, 0x00, //  ###
	0x70, 0x00, //  ###
	0x70, 0x00, //  ###
	0x7F, 0x00, //  #######
	0xFF, 0x80, // #########
	0xFF, 0xC0, // ##########
	0xE1, 0xC0, // ###    ###
	0x00, 0xE0, //         ###
	0x00, 0xE0, //         ###
	0x00, 0xE0, //         ###
	0x00, 0xE0, //         ###
	0xE0, 0xE0, // ###     ###
	0xE0, 0xE0, // ###     ###
	0x71, 0xC0, //  ###   ###
	0x7F, 0xC0, //  #########
	0x3F, 0x80, //   #######
	0x1F, 0x00, //    #####

	// @220 '6' (11 pixels wide)
	0x0F, 0x00, //     ####
	0x3F, 0xC0, //   ########
	0x3F, 0xC0, //   ########
	0x71, 0xE0, //  ###   ####
	0x70, 0xE0, //  ###    ###
	0xE0, 0x00, // ###
	0xE0, 0x00, // ###
	0xEF, 0x00, // ### ####
	0xFF, 0x80, // #########
	0xFF, 0xC0, // ##########
	0xF1, 0xE0, // ####   ####
	0xE0, 0xE0, // ###     ###
	0xE0, 0xE0, // ###     ###
	0xE0, 0xE0, // ###     ###
	0xE0, 0xE0, // ###     ###
	0x60, 0xE0, //  ##     ###
	0x71, 0xE0, //  ###   ####
	0x7F, 0xC0, //  #########
	0x3F, 0x80, //   #######
	0x0F, 0x00, //     ####

	// @260 '7' (11 pixels wide)
	0xFF, 0xE0, // ###########
	0xFF, 0xE0, // ###########
	0xFF, 0xE0, // ###########
	0x01, 0xC0, //        ###
	0x03, 0xC0, //       ####
	0x03, 0x80, //       ###
	0x07, 0x80, //      ####
	0x07, 0x00, //      ###
	0x0F, 0x00, //     ####
	0x0E, 0x00, //     ###
	0x0E, 0x00, //     ###
	0x1C, 0x00, //    ###
	0x1C, 0x00, //    ###
	0x1C, 0x00, //    ###
	0x1C, 0x00, //    ###
	0x38, 0x00, //   ###
	0x38, 0x00, //   ###
	0x38, 0x00, //   ###
	0x38, 0x00, //   ###
	0x38, 0x00, //   ###

	// @300 '8' (11 pixels wide)
	0x1F, 0x00, //    #####
	0x7F, 0xC0, //  #########
	0x7F, 0xC0, //  #########
	0xF1, 0xE0, // ####   ####
	0xE0, 0xE0, // ###     ###
	0xE0, 0xE0, // ###     ###
	0xE0, 0xE0, // ###     ###
	0x71, 0xC0, //  ###   ###
	0x7F, 0xC0, //  #########
	0x3F, 0x80, //   #######
	0x7F, 0xC0, //  #########
	0x71, 0xC0, //  ###   ###
	0xE0, 0xE0, // ###     ###
	0xE0, 0xE0, // ###     ###
	0xE0, 0xE0, // ###     ###
	0xE0, 0xE0, // ###     ###
	0xF1, 0xE0, // ####   ####
	0x7F, 0xC0, //  #########
	0x3F, 0x80, //   #######
	0x1F, 0x00, //    #####

	// @340 '9' (11 pixels wide)
	0x1E, 0x00, //    ####
	0x3F, 0x80, //   #######
	0x7F, 0xC0, //  #########
	0x71, 0xC0, //  ###   ###
	0xE0, 0xC0, // ###     ##
	0xE0, 0xE0, // ###     ###
	0xE0, 0xE0, // ###     ###
	0xE0, 0xE0, // ###     ###
	0xE0, 0xE0, // ###     ###
	0xF1, 0xE0, // ####   ####
	0x7F, 0xE0, //  ##########
	0x3F, 0xE0, //   #########
	0x1E, 0xE0, //    #### ###
	0x00, 0xE0, //         ###
	0x00, 0xE0, //         ###
	0xE1, 0xC0, // ###    ###
	0xF1, 0xC0, // ####   ###
	0x7F, 0x80, //  ########
	0x7F, 0x80, //  ########
	0x1E, 0x00, //    ####
};

// Character descriptors for Arial Narrow 21pt
// { [Char width in bits], [Offset into arialNarrow_21ptCharBitmaps in bytes] }
const FONT_CHAR_INFO rulerFontDescriptors[] =
{
	{11, 0}, 		// 0
	{7, 40}, 		// 1
	{11, 60}, 		// 2
	{11, 100}, 		// 3
	{12, 140}, 		// 4
	{11, 180}, 		// 5
	{11, 220}, 		// 6
	{11, 260}, 		// 7
	{11, 300}, 		// 8
	{11, 340}, 		// 9
};

//// Font information for Arial Narrow 21pt
//const FONT_INFO arialNarrow_21ptFontInfo =
//{
//	20, //  Character height
//	'0', //  Start character
//	'9', //  End character
//	2, //  Width, in pixels, of space character
//	arialNarrow_21ptDescriptors, //  Character descriptor array
//	arialNarrow_21ptBitmaps, //  Character bitmap array
//};
